package com.sample.db.dao;

import com.sample.db.model.JsonTest;
import com.sample.db.model.JsonTestExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface JsonTestMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@SelectProvider(type = JsonTestSqlProvider.class, method = "countByExample")
	int countByExample(JsonTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@DeleteProvider(type = JsonTestSqlProvider.class, method = "deleteByExample")
	int deleteByExample(JsonTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@Delete({ "delete from json_test", "where id = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@Insert({ "insert into json_test (jsonStr, name)",
			"values (#{jsonstr,jdbcType=OTHER}, #{name,jdbcType=VARCHAR})" })
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
	int insert(JsonTest record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@InsertProvider(type = JsonTestSqlProvider.class, method = "insertSelective")
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
	int insertSelective(JsonTest record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@SelectProvider(type = JsonTestSqlProvider.class, method = "selectByExample")
	@Results({
			@Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "jsonStr", property = "jsonstr", jdbcType = JdbcType.OTHER),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR) })
	List<JsonTest> selectByExampleWithRowbounds(JsonTestExample example,
			RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@SelectProvider(type = JsonTestSqlProvider.class, method = "selectByExample")
	@Results({
			@Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "jsonStr", property = "jsonstr", jdbcType = JdbcType.OTHER),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR) })
	List<JsonTest> selectByExample(JsonTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@Select({ "select", "id, jsonStr, name", "from json_test",
			"where id = #{id,jdbcType=INTEGER}" })
	@Results({
			@Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "jsonStr", property = "jsonstr", jdbcType = JdbcType.OTHER),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR) })
	JsonTest selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@UpdateProvider(type = JsonTestSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") JsonTest record,
			@Param("example") JsonTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@UpdateProvider(type = JsonTestSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") JsonTest record,
			@Param("example") JsonTestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@UpdateProvider(type = JsonTestSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(JsonTest record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table json_test
	 * @mbggenerated  Thu Jan 21 15:12:39 CST 2016
	 */
	@Update({ "update json_test", "set jsonStr = #{jsonstr,jdbcType=OTHER},",
			"name = #{name,jdbcType=VARCHAR}",
			"where id = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(JsonTest record);
}